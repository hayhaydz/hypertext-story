{"version":3,"sources":["components/Home/Emoji/Emoji.js","components/Home/Home.js","components/Instructions/Instructions.js","components/Story/Choice/Choice.js","components/Story/Interlude/Interlude.js","components/Story/Story.js","components/NoMatch/NoMatch.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Emoji","React","useState","count","setCount","requestRef","useRef","previousTimeRef","animate","time","undefined","current","deltaTime","prevCount","requestAnimationFrame","useEffect","cancelAnimationFrame","symbols","symbol","emoji","label","push","className","role","aria-label","Math","round","aria-hidden","Home","to","width","height","viewBox","fill","xmlns","filter","fillRule","clipRule","d","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","type","values","dx","dy","stdDeviation","operator","k2","k3","Instructions","Choice","props","day","onClick","handleHelpClick","elements","map","el","key","handleElementClick","value","Interlude","title","details","Story","shuffleArray","array","temporaryValue","randomIndex","currentIndex","length","floor","random","displayMessage","data","dataState","duration","message","state","setState","domElement","document","getElementById","style","opacity","setTimeout","index","event","preventDefault","selectionMade","classList","add","choiceElementsD","choiceElements","i","selected","element","remove","handleHelpCLick","e","helpCountUsed","helpCount","currentElementID","domChoiceElement","children","quality","handleBtnClick","renderChoice","choiceMade","feedbackMessages","positive","okay","negative","getElementsByClassName","score","choicesIndex","choices","eventElementD","events","eventsIndex","eventElement","render","disabled","window","location","reload","bind","this","choicesJSON","eventsJSON","Component","NoMatch","useLocation","pathname","App","exact","path","Boolean","hostname","match","ReactDOM","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.085159fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Emoji = () => {\r\n    const [count, setCount] = React.useState(0);\r\n\r\n    const requestRef = React.useRef();\r\n    const previousTimeRef = React.useRef();\r\n\r\n    const animate = time => {\r\n        if(previousTimeRef.current !== undefined) {\r\n            const deltaTime = time - previousTimeRef.current;\r\n            setCount(prevCount => (prevCount + deltaTime * 0.002)  % 3);\r\n        }\r\n        previousTimeRef.current = time;\r\n        requestRef.current = requestAnimationFrame(animate);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => cancelAnimationFrame(requestRef.current);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    \r\n\r\n    let symbols = [];\r\n    let symbol = {\r\n        emoji: '🍝',\r\n        label: 'Pasta'\r\n    };\r\n    symbols.push(symbol);\r\n    symbol = {\r\n        emoji: '🍽️',\r\n        label: 'Knife and Fork with Plate'\r\n    };\r\n    symbols.push(symbol);\r\n    symbol = {\r\n        emoji: '🍻',\r\n        label: 'Clinking beer mugs'\r\n    };\r\n    symbols.push(symbol);\r\n    symbol = {\r\n        emoji: '🍟',\r\n        label: 'French fries'\r\n    };\r\n    symbols.push(symbol);\r\n\r\n    return (\r\n        <div className=\"Home__right--emoji\">\r\n            <span\r\n                role=\"img\"\r\n                aria-label={symbols[Math.round(count)].label}\r\n                aria-hidden={symbols[Math.round(count)].label}\r\n            >\r\n                {symbols[Math.round(count)].emoji}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emoji;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.scss';\r\n\r\nimport Emoji from './Emoji/Emoji';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"Home__left\">\r\n            <h1 className=\"Home__left--title Home__left--title_top\">Student</h1>\r\n            <h1 className=\"Home__left--title Home__left--title_bottom\">Meals</h1>\r\n            <Link className=\"Home__left--btn\" to=\"/Instructions\">\r\n                <span>Begin your journey</span> \r\n                <i className=\"material-icons\">arrow_forward</i>\r\n            </Link>\r\n            </div>\r\n            <div className=\"Home__right\">\r\n            <Emoji></Emoji>\r\n            <svg width=\"1018\" height=\"1042\" viewBox=\"0 0 1018 1042\" className=\"Home__right--blob\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g filter=\"url(#filter0_i)\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M63.6424 535.675C54.0172 437.666 64.9543 329.838 128.91 254.951C188.611 185.045 297.468 199.735 381.798 163.136C458.212 129.972 515.17 55.2984 598.37 51.2051C690.822 46.6566 796.706 67.4545 854.338 139.887C911.17 211.315 854.979 318.092 880.463 405.741C912.2 514.9 1040.51 596.258 1019.51 707.981C998.334 820.658 890.96 915.349 779.581 942.534C672.644 968.634 581.305 864.802 473.795 841.176C376.435 819.78 263.516 871.1 183.572 811.555C101.138 750.154 73.6886 637.972 63.6424 535.675Z\" fill=\"#FFC370\"/>\r\n                </g>\r\n                <defs>          \r\n                <filter id=\"filter0_i\" x=\"0\" y=\"-15\" width=\"1082.78\" height=\"1059.3\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n                    <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"/>\r\n                    <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\"/>\r\n                    <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\r\n                    <feOffset dx=\"25\" dy=\"-15\"/>\r\n                    <feGaussianBlur stdDeviation=\"25\"/>\r\n                    <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\"/>\r\n                    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0\"/>\r\n                    <feBlend mode=\"normal\" in2=\"shape\" result=\"effect1_innerShadow\"/>\r\n                </filter>\r\n                </defs>\r\n            </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Instructions.scss';\r\n\r\nfunction Instructions() {\r\n    return(\r\n        <div className=\"Instructions\">\r\n            <div className=\"Instructions__logo\">\r\n                <h1 className=\"Instructions__logo--top\" >Student</h1>\r\n                <h1 className=\"Instructions__logo--bottom\" >Meals</h1>\r\n            </div>\r\n            <h2 className=\"Instructions__title\">Instructions</h2>\r\n            <div className=\"Instructions__content\">\r\n                <p className=\"Instructions__content--paragraph\">Each day a selection of meal choices will be given to you, you will need to select the best meal choice for that day. Ensure that you maintain a healthy diet. If you need any help then click the help button in the top right, this can be used a maximum of 5 times throughout the story!</p>\r\n            </div>\r\n            <Link className=\"Instructions__btn\" to=\"/Story\">\r\n                <span>Next</span> \r\n                <i className=\"material-icons\">arrow_forward</i>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instructions;","import React from 'react';\r\nimport './Choice.scss';\r\n\r\nconst Choice = props => {\r\n    return (\r\n        <div className=\"Choice\">\r\n            <h1 className=\"Choice__title\">Day {props.day}</h1>\r\n            <button className=\"Choice__helpBtn\" onClick={props.handleHelpClick}><span className=\"material-icons\">help</span></button>\r\n            <div className=\"Choice__options\">\r\n                {props.elements.map((el => (\r\n                        <div className=\"Choice__options--option\" key={el.id} onClick={props.handleElementClick(el.id)} id={`option_${el.id}`}>\r\n                            <div className=\"Choice__options--option-emoji\">\r\n                            <span\r\n                                role=\"img\"\r\n                                aria-label=\"Mushroom\"\r\n                            >\r\n                                {el.emoji}\r\n                            </span>\r\n                            </div>\r\n                            <p className=\"Choice__options--option-name\">{el.value}</p>\r\n                        </div>\r\n                    )\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Choice;","import React from 'react';\r\nimport './Interlude.scss';\r\n\r\nconst Interlude = props => {\r\n    return (\r\n        <div className=\"Interlude\">\r\n            {/* <h1 className=\"Interlude__day\">Day {this.state.day}</h1> */}\r\n            <h1 className=\"Interlude__title\">{props.title}</h1>\r\n            <p className=\"Interlude__text\">{props.details}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Interlude;","import React from 'react';\r\nimport './Story.scss';\r\nimport choicesJSON from '../../assets/json/data_choices.json';\r\nimport eventsJSON from '../../assets/json/data_events.json';\r\n\r\nimport Choice from './Choice/Choice';\r\nimport Interlude from './Interlude/Interlude';\r\n\r\nclass Story extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            day: 1,\r\n            score: 0,\r\n            selectionMade: false,\r\n            choices: [],\r\n            choicesIndex: 0,\r\n            choiceElements: [],\r\n            events: [],\r\n            eventsIndex: 0,\r\n            eventElement: [],\r\n            renderChoice: true,\r\n            helpCount: 0,\r\n            helpCountUsed: false,\r\n            message: {\r\n                state: \"\",\r\n                data: \"\"\r\n            }\r\n        };\r\n\r\n        this.handleElementClick = this.handleElementClick.bind(this);\r\n        this.handleHelpCLick = this.handleHelpCLick.bind(this);\r\n        this.handleBtnClick = this.handleBtnClick.bind(this);\r\n        this.shuffleArray = this.shuffleArray.bind(this);\r\n        this.displayMessage = this.displayMessage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Setup choice data\r\n        let choices = this.shuffleArray(choicesJSON.choices);\r\n        this.setState({choices}, () => {\r\n            this.setState({choiceElements: this.state.choices[0]}, () => {\r\n                let choiceElementsD = this.shuffleArray(this.state.choiceElements);\r\n                this.setState({choiceElements: choiceElementsD});\r\n            });\r\n        });\r\n\r\n        // Setup interlude events\r\n        let events = eventsJSON.events;\r\n        this.setState({events}, () => {\r\n            this.setState({eventElement: this.state.events[this.state.eventsIndex][1]});\r\n        });\r\n\r\n    }\r\n\r\n    // Shuffle choiceElements\r\n    // https://gomakethings.com/how-to-shuffle-an-array-with-vanilla-js/\r\n    shuffleArray = array => {\r\n        let currentIndex = array.length;\r\n        let temporaryValue, randomIndex;\r\n\r\n        while (0 !== currentIndex) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    displayMessage = (data, dataState, duration) => {\r\n        let message = {\r\n            state: dataState,\r\n            data: data\r\n        }\r\n        this.setState({message: message},() => {\r\n            let domElement = document.getElementById('story-message');\r\n            domElement.style.opacity = 1;\r\n            setTimeout(() => {\r\n                domElement.style.opacity = 0;\r\n                setTimeout(() => {\r\n                    message.data = \"\";\r\n                    this.setState({message: message});\r\n                }, 200);\r\n            }, duration);\r\n        });\r\n    }\r\n\r\n    handleElementClick = index => event => {\r\n        // preventing any default DOM action from clicking\r\n        event.preventDefault();\r\n\r\n        // Allowing the next button to be enabled by changing this boolean variable\r\n        if(!this.state.selectionMade) {\r\n            this.setState({selectionMade: true});\r\n        }\r\n\r\n        // Reseting selected classes on other elements\r\n        let selectedOption = document.getElementById('option_' + index);\r\n        selectedOption.classList.add('Choice__options--option-selected');\r\n        let choiceElementsD = this.state.choiceElements;\r\n        for (let i = 0; i < choiceElementsD.length; i++) {\r\n            if(choiceElementsD[i].id !== index) {\r\n                if(choiceElementsD[i].selected) {\r\n                    let element = this.state.choiceElements[i];\r\n                    let removeClassOption = document.getElementById('option_' + element.id);\r\n                    removeClassOption.classList.remove('Choice__options--option-selected');\r\n                    choiceElementsD[i].selected = false;\r\n                }\r\n            } else {\r\n                choiceElementsD[i].selected = true;\r\n            }\r\n        }\r\n\r\n        this.setState({choiceElements: choiceElementsD});\r\n    }\r\n\r\n    handleHelpCLick = e => {\r\n        if (!this.state.helpCountUsed) {\r\n            if(this.state.helpCount < 5) {\r\n                for (let i = 0; i < this.state.choiceElements.length; i++) {\r\n                    let currentElementID = this.state.choiceElements[i].id;\r\n                    let domChoiceElement = document.getElementById('option_' + currentElementID).children[0];\r\n                    switch (this.state.choiceElements[i].quality) {\r\n                        case 'good':\r\n                            domChoiceElement.classList.add('Choice__options--option-emoji--good');\r\n                            break;\r\n                        case 'okay':\r\n                            domChoiceElement.classList.add('Choice__options--option-emoji--okay');\r\n                            break;\r\n                        case 'bad':\r\n                            domChoiceElement.classList.add('Choice__options--option-emoji--bad');\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                this.setState({helpCountUsed: true});\r\n                this.setState({helpCount: this.state.helpCount + 1});\r\n            } else {\r\n                this.displayMessage(\"All helpful tips have been used!\", \"negative\", 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBtnClick = e => {\r\n        e.preventDefault();\r\n        // If the current rendered component is the choice component\r\n        if (this.state.renderChoice) {\r\n            if(this.state.day !== 20) {\r\n                // Messages to give based on users choices\r\n                let feedbackMessages = {\r\n                    positive: [\r\n                        \"Wow! You're on fire.\",\r\n                        \"You're acing this!\",\r\n                        \"This is incredible work!\",\r\n                        \"I've never seen someone do such a great job!\",\r\n                        \"Hey! You're pretty good at this.\"\r\n                    ],\r\n                    okay: [\r\n                        \"That was alright I guess...\",\r\n                        \"That wasn't the best choice... but it also wasn't the worst!\",\r\n                        \"Eh, that was okay.\",\r\n                        \"I guess it wasn't the worst choice you could have made.\",\r\n                        \"I believe in you!\"\r\n                    ],\r\n                    negative: [\r\n                        \"Wow, that was a terrible choice.\",\r\n                        \"Better luck next time!\",\r\n                        \"Ugh, I thought you were better than this...\",\r\n                        \"You'll get it correct some day.\",\r\n                        \"Whoops! That was the wrong choice.\"\r\n                    ]\r\n                }\r\n\r\n                // Reset selected class elements\r\n                let resetElement = document.getElementsByClassName('Choice__options--option-selected');\r\n                resetElement[0].classList.remove('Choice__options--option-selected');\r\n                //Score Delegation\r\n                let choiceMade;\r\n                for (let i = 0; i < this.state.choiceElements.length; i++) {\r\n                    if (this.state.choiceElements[i].selected) {\r\n                        switch(this.state.choiceElements[i].quality) {\r\n                            case 'good':\r\n                                this.setState({score: this.state.score + 10});\r\n                                choiceMade = 'positive';\r\n                                break;\r\n                            case 'okay':\r\n                                this.setState({score: this.state.score + 1});\r\n                                choiceMade = 'okay';\r\n                                break;\r\n                            case 'bad':\r\n                                this.setState({score: this.state.score - 5});\r\n                                choiceMade = 'negative';\r\n                                break;\r\n                            default:\r\n                                this.setState({score: this.state.score});\r\n                                break;\r\n                        }\r\n                    }\r\n                    if(this.state.helpCountUsed) {\r\n                        let domElement = document.getElementById('option_'+i).children[0];\r\n                        domElement.className = \"Choice__options--option-emoji\";\r\n                    }\r\n                }\r\n                // Display feedback for user based on their choice\r\n                this.displayMessage(feedbackMessages[choiceMade][Math.floor(Math.random() * feedbackMessages[choiceMade].length)], choiceMade, 2000);\r\n                // Progress day forward and reset selection made boolean\r\n                this.setState({day: this.state.day + 1, selectionMade: false});\r\n                // Assign new elements for next day\r\n                this.setState({choicesIndex: this.state.choicesIndex + 1}, () => {\r\n                    let choiceElementsD = this.shuffleArray(this.state.choices[this.state.choicesIndex]);\r\n                    this.setState({choiceElements: choiceElementsD});\r\n                });\r\n\r\n                // Select interlude event data based on score\r\n                if(this.state.score >= (this.state.day - 1) * 5) {\r\n                    // Doing good\r\n                    let eventsD = this.state.events;\r\n                    let eventElementD = eventsD[this.state.eventsIndex][0];\r\n                    this.setState({eventElement: eventElementD});\r\n                } else if (this.state.score >= (this.state.day - 1) * 1) {\r\n                    // Doing okay\r\n                    let eventsD = this.state.events;\r\n                    let eventElementD = eventsD[this.state.eventsIndex][1];\r\n                    this.setState({eventElement: eventElementD});\r\n                } else if(this.state.score <= 0) {\r\n                    // Doing bad\r\n                    let eventsD = this.state.events;\r\n                    let eventElementD = eventsD[this.state.eventsIndex][2];\r\n                    this.setState({eventElement: eventElementD});\r\n                }\r\n\r\n                if(this.state.day % 5 === 0) {\r\n                    this.setState({renderChoice: false});\r\n                }\r\n\r\n                if(this.state.helpCountUsed) {\r\n                    this.setState({helpCountUsed: false});\r\n                }\r\n            } else {\r\n                this.setState({renderChoice: false});\r\n            }\r\n        } else {\r\n            // if the current rendered component is the interlude component the next button will run this code\r\n            // this code is moving the event index forward and re enabling the choice render boolean\r\n            this.setState({eventsIndex: this.state.eventsIndex + 1, renderChoice: true});\r\n        }\r\n    }\r\n    \r\n    render = () => {\r\n        return (\r\n            <div className=\"Story\">\r\n                {this.state.renderChoice\r\n                    ? <Choice elements={this.state.choiceElements} day={this.state.day} handleElementClick={this.handleElementClick} handleHelpClick={this.handleHelpCLick} />\r\n                    : <Interlude title={this.state.eventElement.title} details={this.state.eventElement.details}/>\r\n                }\r\n                {this.state.message.data !== \"\" &&\r\n                    <div className={`Story__message Story__message--${this.state.message.state}`} id=\"story-message\"><p>{this.state.message.data}</p></div>\r\n                }\r\n                {(!this.state.renderChoice && this.state.eventsIndex === 3)\r\n                    ? <button className=\"Story__btn\" onClick={() => window.location.reload()}><span>Play again</span><i className=\"material-icons\">arrow_forward</i></button>\r\n                    : <button className=\"Story__btn\" onClick={(e) => this.handleBtnClick(e)} disabled={!this.state.selectionMade && this.state.renderChoice}><span>Next</span><i className=\"material-icons\">arrow_forward</i></button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Story;","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './NoMatch.scss';\r\n\r\nconst NoMatch = () => {\r\n    let location = useLocation();\r\n\r\n    return(\r\n        <div className=\"NoMatch\">\r\n            <h3>No match for <code>{location.pathname}</code></h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch;","import React from 'react';\nimport { \n  Route, \n  Switch\n} from \"react-router-dom\";\nimport './App.scss';\n\nimport Home from '../Home/Home';\nimport Instructions from '../Instructions/Instructions';\nimport Story from '../Story/Story';\nimport NoMatch from '../NoMatch/NoMatch';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/' >\n          <Home />\n        </Route>\n        <Route path='/instructions' >\n          <Instructions />\n        </Route>\n        <Route path='/story' >\n          <Story />\n        </Route>\n        <Route path='*'>\n          <NoMatch />\n        </Route>\n      </Switch>\n      <div className=\"App__border\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router basename=\"/\">\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}